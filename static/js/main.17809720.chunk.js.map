{"version":3,"sources":["components/NavigationBar.js","model/Home.js","model/Resume.js","model/Projects.js","model/About.js","model/Contact.js","model/SignIn.js","model/SignUp.js","App.js","serviceWorker.js","index.js","assets/profilepic.png"],"names":["NavigationBar","className","title","scroll","to","Home","style","width","margin","col","alt","src","profilepic","target","href","rel","aria-hidden","Resume","Projects","props","state","activeTab","this","shadow","color","height","background","border","name","onChange","tabId","setState","ripple","toggleCategories","Component","About","Contact","SignIn","SignUp","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.17809720.chunk.js","sourcesContent":["import React from 'react'\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl'\nimport { Link } from 'react-router-dom'\n\nexport const NavigationBar = () => {\n  return (\n    <div className=\"demo-big-content\">\n      <Layout>\n        <Header className=\"header-color\" title=\"My Portfolio\" scroll>\n          <Navigation>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/resume\">Resume</Link>\n            <Link to=\"/projects\">Projects</Link>\n            <Link to=\"/contact\">Contact</Link>\n            <Link to=\"/signin\">Sign</Link>\n          </Navigation>\n        </Header>\n        <Drawer title=\"My Portfolio\">\n          <Navigation>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/resume\">Resume</Link>\n            <Link to=\"/about\">Projects</Link>\n            <Link to=\"/contact\">Contact</Link>\n            <Link to=\"/signin\">Sign</Link>\n          </Navigation>\n        </Drawer>\n        <Content>\n          <div className=\"page-content\" />\n        </Content>\n      </Layout>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Grid, Cell } from 'react-mdl'\nimport profilepic from '../assets/profilepic.png'\n\nexport const Home = () => {\n  return (\n    <div className=\"all-content\" style={{ width: '100%', margin: 'auto' }}>\n      <Grid className=\"home-grid\">\n        <Cell col={12}>\n          <img className=\"profile-picture\" alt=\"profile\" src={profilepic} />\n          <div className=\"banner-text\">\n            <h1>Full Stack Web Developer</h1>\n            <hr />\n            <p>\n              Javascript | React | NodeJS | Express | MongoDB | HTML & CSS |\n              Java\n            </p>\n            <div className=\"social-links\">\n              {/* Github */}\n              <a\n                target=\"_blank\"\n                href=\"https://github.com/benjambo\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\n              </a>\n              {/* LinkedIn */}\n              <a\n                target=\"_blank\"\n                href=\"https://linkedin.com/in/benjaminbowo\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\n              </a>\n              {/* Instagram */}\n              <a\n                target=\"_blank\"\n                href=\"https://instagram.com/benjaminjoshin\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className=\"fa fa-instagram\" aria-hidden=\"true\" />\n              </a>\n\n              <a\n                target=\"_blank\"\n                href=\"https://facebook.com/benjamin.bowo\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className=\"fa fa-facebook-square\" aria-hidden=\"true\" />\n              </a>\n            </div>\n          </div>\n        </Cell>\n      </Grid>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const Resume = () => {\n  return (\n    <div className='all-content'>\n      <h1>Resume Page</h1>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport {\n  Tabs,\n  Tab,\n  Grid,\n  Cell,\n  Card,\n  CardTitle,\n  CardActions,\n  CardMenu,\n  Button,\n  IconButton,\n  CardText,\n} from 'react-mdl'\n\nexport class Projects extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { activeTab: 0 }\n  }\n\n  toggleCategories() {\n    if (this.state.activeTab === 0) {\n      return (\n        <div className=\"projects-grid\">\n          {/* MovieSurfer */}\n          <Card shadow={3} style={{ margin: 'auto' }}>\n            <CardTitle\n              style={{\n                color: '#fff',\n                height: '176px',\n                background:\n                  'url(https://images.pexels.com/photos/965625/pexels-photo-965625.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=1300) center / cover',\n              }}\n            >\n              MovieSurfer\n            </CardTitle>\n            <CardText>\n              MovieSurfer is a project I did at school with a team. The idea was\n              to create a website to gather all movies in different theaters to\n              one place. MovieSurfer's goal is to bring the prices down on movie\n              tickets and end the monopoly position Finnkino has\n            </CardText>\n            <CardActions border>\n              <Button\n                target=\"_blank\"\n                href=\"https://github.com/benjambo/MovieSurfer\"\n              >\n                GitHub\n              </Button>\n              <Button\n                target=\"_blank\"\n                href=\"https://moviesurfer-app.herokuapp.com\"\n              >\n                Demo\n              </Button>\n            </CardActions>\n            <CardMenu style={{ color: '#fff' }}>\n              <IconButton name=\"share\" />\n            </CardMenu>\n          </Card>\n          {/* Perfiction */}\n          <Card shadow={3} style={{ margin: 'auto' }}>\n            <CardTitle\n              style={{\n                color: '#fff',\n                height: '176px',\n                background:\n                  'url(https://images.pexels.com/photos/9186/food-beans-coffee-drink.jpg?auto=compress&cs=tinysrgb&dpr=1&w=500) center / cover',\n              }}\n            >\n              Perfiction\n            </CardTitle>\n            <CardText>\n              Perfiction is an enthusiastic coffee website where the idea is to\n              promote a coffeeshop as a brand and sell their products. This\n              project was my first time using React.\n            </CardText>\n            <CardActions border>\n              <Button\n                target=\"_blank\"\n                href=\"https://github.com/benjambo/Perfiction\"\n              >\n                GitHub\n              </Button>\n              <Button\n                target=\"_blank\"\n                href=\"https://perfiction.herokuapp.com/home\"\n              >\n                Demo\n              </Button>\n            </CardActions>\n            <CardMenu style={{ color: '#fff' }}>\n              <IconButton name=\"share\" />\n            </CardMenu>\n          </Card>\n          {/* My Portfolio */}\n          <Card shadow={3} style={{ margin: 'auto' }}>\n            <CardTitle\n              style={{\n                color: '#fff',\n                height: '176px',\n                background:\n                  'url(https://images.pexels.com/photos/169573/pexels-photo-169573.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500) center / cover',\n              }}\n            >\n              My Portfolio\n            </CardTitle>\n            <CardText>\n              This is a project I created by myself to make myself and portfolio\n              of all my work.\n            </CardText>\n            <CardActions border>\n              <Button\n                target=\"_blank\"\n                href=\"https://github.com/benjambo/Portfolio\"\n              >\n                GitHub\n              </Button>\n              <Button\n                target=\"_blank\"\n                href=\"https://benjambo.github.io/Portfolio\"\n              >\n                Demo\n              </Button>\n            </CardActions>\n            <CardMenu style={{ color: '#fff' }}>\n              <IconButton name=\"share\" />\n            </CardMenu>\n          </Card>\n        </div>\n      )\n    } else if (this.state.activeTab === 1) {\n      return (\n        <div>\n          <h1>This is Java</h1>\n        </div>\n      )\n    } else if (this.state.activeTab === 2) {\n      return (\n        <div>\n          {/* Cup O'Roast */}\n          <Card shadow={3} style={{ margin: 'auto' }}>\n            <CardTitle\n              style={{\n                color: '#fff',\n                height: '176px',\n                background:\n                  'url(https://images.pexels.com/photos/982612/pexels-photo-982612.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500) center / cover',\n              }}\n            >\n              Cup O'Roast\n            </CardTitle>\n            <CardText>\n              Cup O'Roast is the very first project that I took part in.\n            </CardText>\n            <CardActions border>\n              <Button\n                target=\"_blank\"\n                href=\"https://github.com/Jepu32/ProjectCoffee\"\n              >\n                GitHub\n              </Button>\n              <Button\n                target=\"_blank\"\n                href=\"http://users.metropolia.fi/~benjambo/Projekti/Coffee.html\"\n              >\n                Demo\n              </Button>\n            </CardActions>\n            <CardMenu style={{ color: '#fff' }}>\n              <IconButton name=\"share\" />\n            </CardMenu>\n          </Card>\n        </div>\n      )\n    } else if (this.state.activeTab === 3) {\n      return (\n        <div>\n          <h1>This is Unity</h1>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"all-content\">\n        <div>\n          <Tabs\n            activeTab={this.state.activeTab}\n            onChange={(tabId) => this.setState({ activeTab: tabId })}\n            ripple\n          >\n            <Tab>React</Tab>\n            <Tab>Java</Tab>\n            <Tab>Javascript</Tab>\n            <Tab>Unity</Tab>\n          </Tabs>\n\n          <Grid className=\"grid-width\">\n            <Cell col={12} >\n              <div className=\"content\">{this.toggleCategories()}</div>\n            </Cell>\n          </Grid>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nexport const About = () => {\n  return (\n    <div className='all-content'>\n      <h1>About Page</h1>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const Contact = () => {\n  return (\n    <div className='all-content'>\n      <h1>Contact Page</h1>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const SignIn = () => {\n  return (\n    <div className='all-content'>\n      <h1>Sign In Page</h1>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport const SignUp = () => {\n  return (\n    <div className=\"all-content\">\n      <h1>Sign Up Page</h1>\n    </div>\n  )\n}\n","import React from 'react'\nimport './App.css'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport { NavigationBar } from './components/NavigationBar'\nimport { Home } from './model/Home'\nimport { Resume } from './model/Resume'\nimport { Projects } from './model/Projects'\nimport { About } from './model/About'\nimport { Contact } from './model/Contact'\nimport { SignIn } from './model/SignIn'\nimport { SignUp } from './model/SignUp'\n\nconst App = () => {\n  return (\n    <Router>\n      <NavigationBar />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/resume\" component={Resume} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/projects\" component={Projects} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route path=\"/signin\" component={SignIn} />\n        <Route path=\"/signup\" component={SignUp} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport 'react-mdl/extra/material.css'\nimport 'react-mdl/extra/material.js'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/profilepic.c473d262.png\";"],"sourceRoot":""}